// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Service.BrokerFeeApplier.Postgres;

#nullable disable

namespace Service.BrokerFeeApplier.Postgres.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220708122209_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("broker_fee_applier")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Service.BrokerFeeApplier.Postgres.Models.FireblocksFeeApplicationEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("AssetSymbol")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("DestinationAddress")
                        .HasColumnType("text");

                    b.Property<string>("DestinationTag")
                        .HasColumnType("text");

                    b.Property<DateTime>("EventDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc));

                    b.Property<string>("ExternalId")
                        .HasColumnType("text");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("FeeApplicationIdInMe")
                        .HasColumnType("text");

                    b.Property<string>("FeeAssetSymbol")
                        .HasColumnType("text");

                    b.Property<string>("InternalNote")
                        .HasColumnType("text");

                    b.Property<string>("Network")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("TransactionId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.ToTable("fireblocks_fee_application", "broker_fee_applier");
                });
#pragma warning restore 612, 618
        }
    }
}
